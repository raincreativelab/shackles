<?php
/**
 * ImageFileFormatter
 *
 * PHP version 5.5+
 *
 * @category Shackles_Util
 * @package  Shackles\Util
 * @author   jpdguzman <jpdguzman@gmail.com>
 * @license  MIT http://opensource.org/licenses/MIT
 * @link     http://www.raincreativelab.com
 */
namespace shackles\util;

use shackles\Image;


/**
 * ImageFileFormatter
 * Provides a centralize way to format image name with a
 * consistent file name strategy.
 *
 * PHP version 5.5+
 *
 * @category Shackles_Util
 * @package  Shackles\Util
 * @author   jpdguzman <jpdguzman@gmail.com>
 * @license  MIT http://opensource.org/licenses/MIT
 * @link     http://www.raincreativelab.com
 */
class ImageFileFormatter
    extends FileFormatter
{

    /**
     * Image to format
     *
     * @var Image
     */
    private $_image;

    /**
     * Create a new instance of ImageFileFormatter
     *
     * @param Image $image target image
     */
    function __construct(Image $image)
    {
        $this->_image = $image;
    }

    /**
     * Generate the name base on the format strategy.
     * Formatting details are as follows:
     *
     * You can use the following variables to the format
     *
     * NAME: The original file name
     * EXT:  File name extension (automatically added at the end)
     * W:    Resulting image width
     * H:    Resulting image height
     * #:    Random Character
     *
     * Format:
     * photo.jpg (200x200)
     * {NAME}-{####}-{W}x{H} - the following will produce the following output:
     *
     *  photo-4AE2-200x200.jpg
     *
     * The '4AE2' are random string series generated by the system. The length of
     * the random string depends on the number of # on the format.
     *
     * @param string $format Format name strategy
     * @param array  $vars   Format variables
     *
     * @return string
     */
    public function generate($format, $vars = [])
    {
        $image = $this->_image;

        list($width, $height) = getimagesize($image->getFullPath());

        // Here are the variables that can be used for the file format
        $vars = [
            "NAME" => basename($image->getSourceName(), ".{$image->getExtension()}"),
            "EXT"  => $image->getExtension(),
            "W"    => $width,
            "H"    => $height
        ];

        // Add the extension to the format of the file
        $format = $format . ".{EXT}";

        return parent::generate($format, $vars);
    }


} 